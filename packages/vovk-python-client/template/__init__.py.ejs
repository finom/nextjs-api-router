---
imports: ['vovk-python-client']
---
<% const vars = {
    convertJSONSchemaToPythonType: t.imports['vovk-python-client'].convertJSONSchemaToPythonType,
}; %>
<%- `# auto-generated ${new Date().toISOString()}` %>
from typing import Any, Dict, List, Literal, Optional, Set, TypedDict, Union, Tuple
from datetime import date, datetime, time

# Optional but recommended if using Python 3.7+:
from __future__ import annotations  # Enables forward references in type hints

def _load_full_schema() -> dict:
    """
    Loads the 'full-schema.json' file (which must sit in the same folder as this __init__.py).
    Returns it as a Python dictionary.
    """
    current_dir = os.path.dirname(__file__)
    schema_path = os.path.join(current_dir, "full-schema.json")
    with open(schema_path, "r", encoding="utf-8") as f:
        return json.load(f)
full_schema = _load_full_schema()
default_api_root = '<%= t.apiRoot %>';
<% Object.entries(t.fullSchema.segments).forEach(([segmentName, segment]) => {
    Object.values(segment.controllers).forEach(({ prefix, handlers, controllerName }) => { %>
        class <%= controllerName %>:

       <% Object.entries(handlers).forEach(([handlerName, { validation, openapi, path, httpMethod }]) => { %>
          # <%= controllerName %>.<%= handlerName %> <%= httpMethod %> <%= t.apiRoot %>/<%= segmentName %>/<%= prefix %>/<%= path %>
            @staticmethod
            def <%= handlerName %>(
                body: <%- vars.convertJSONSchemaToPythonType(validation?.body).pythonType %>, 
                query: <%- vars.convertJSONSchemaToPythonType(validation?.query).pythonType %>, 
                params: <%- vars.convertJSONSchemaToPythonType(validation?.params).pythonType %>,
                api_root: str | None = None
            ) -> <%- vars.convertJSONSchemaToPythonType(validation?.output).pythonType %>:
                """
                <%= openapi?.summary ?? 'No summary' %>
                <%= openapi?.description ? `Description: ${openapi.description}` : '' %>
                <%= validation?.body?.description ? `Body: ${validation?.body?.description}`: '' %>
                <%= validation?.query?.description ? `Query: ${validation?.query?.description}`: '' %>
                <%= validation?.output?.description ? `Returns: ${validation?.output?.description}`: '' %>
                """
                if api_root is None:
                    api_root = default_api_root
                url = f"{api_root}/<%= segmentName %>/<%= prefix %>/<%= path %>"
        <% }) %>
    <% }) %>
<% }) %>
